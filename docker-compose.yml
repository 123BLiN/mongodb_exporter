---
version: '3'
services:
  standalone:
    image: ${MONGODB_IMAGE}
    command: --port=27017
    ports:
      - 27027:2701
    volumes:
      - ./docker/test/entrypoint-mongod.sh:/entrypoint.sh:ro
      - ./docker/test/entrypoint-mongod.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./docker/test/mongod.key:/mongod.key:ro
      - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
      - ./docker/test/ssl/mongodb.pem:/mongod.pem:ro
  s1-mongo1:
    image: ${MONGODB_IMAGE}
    command: --replSet=${TEST_MONGODB_S1_RS} --shardsvr
    volumes:
      - ./docker/test/entrypoint-mongod.sh:/entrypoint.sh:ro
      - ./docker/test/entrypoint-mongod.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./docker/test/mongod.key:/mongod.key:ro
      - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
      - ./docker/test/ssl/mongodb.pem:/mongod.pem:ro
  s1-mongo2:
    image: ${MONGODB_IMAGE}
    command: --replSet=${TEST_MONGODB_S1_RS} --shardsvr
    volumes:
      - ./docker/test/entrypoint-mongod.sh:/entrypoint.sh:ro
      - ./docker/test/entrypoint-mongod.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./docker/test/mongod.key:/mongod.key:ro
      - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
      - ./docker/test/ssl/mongodb.pem:/mongod.pem:ro
  s1-mongo3:
    image: ${MONGODB_IMAGE}
    command: --replSet=${TEST_MONGODB_S1_RS} --shardsvr
    volumes:
      - ./docker/test/entrypoint-mongod.sh:/entrypoint.sh:ro
      - ./docker/test/entrypoint-mongod.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./docker/test/mongod.key:/mongod.key:ro
      - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
      - ./docker/test/ssl/mongodb.pem:/mongod.pem:ro
  s2-mongo1:
    image: ${MONGODB_IMAGE}
    command: --replSet=${TEST_MONGODB_S2_RS} --shardsvr
    volumes:
      - ./docker/test/entrypoint-mongod.sh:/entrypoint.sh:ro
      - ./docker/test/entrypoint-mongod.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./docker/test/mongod.key:/mongod.key:ro
      - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
      - ./docker/test/ssl/mongodb.pem:/mongod.pem:ro
  s2-mongo2:
    image: ${MONGODB_IMAGE}
    command: --replSet=${TEST_MONGODB_S2_RS} --shardsvr
    volumes:
      - ./docker/test/entrypoint-mongod.sh:/entrypoint.sh:ro
      - ./docker/test/entrypoint-mongod.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./docker/test/mongod.key:/mongod.key:ro
      - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
      - ./docker/test/ssl/mongodb.pem:/mongod.pem:ro
  s2-mongo3:
    image: ${MONGODB_IMAGE}
    command: --replSet=${TEST_MONGODB_S2_RS} --shardsvr
    volumes:
      - ./docker/test/entrypoint-mongod.sh:/entrypoint.sh:ro
      - ./docker/test/entrypoint-mongod.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./docker/test/mongod.key:/mongod.key:ro
      - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
      - ./docker/test/ssl/mongodb.pem:/mongod.pem:ro
  s3-mongo1:
    image: ${MONGODB_IMAGE}
    command: --replSet=${TEST_MONGODB_S3_RS}
    ports:
      - 27047:27017
    volumes:
      - ./docker/test/entrypoint-mongod.sh:/entrypoint.sh:ro
      - ./docker/test/entrypoint-mongod.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./docker/test/mongod.key:/mongod.key:ro
      - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
      - ./docker/test/ssl/mongodb.pem:/mongod.pem:ro
  s3-mongo2:
    image: ${MONGODB_IMAGE}
    command: --replSet=${TEST_MONGODB_S3_RS}
    volumes:
      - ./docker/test/entrypoint-mongod.sh:/entrypoint.sh:ro
      - ./docker/test/entrypoint-mongod.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./docker/test/mongod.key:/mongod.key:ro
      - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
      - ./docker/test/ssl/mongodb.pem:/mongod.pem:ro
  s3-mongo3:
    image: ${MONGODB_IMAGE}
    command: --replSet=${TEST_MONGODB_S3_RS}
    volumes:
      - ./docker/test/entrypoint-mongod.sh:/entrypoint.sh:ro
      - ./docker/test/entrypoint-mongod.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./docker/test/mongod.key:/mongod.key:ro
      - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
      - ./docker/test/ssl/mongodb.pem:/mongod.pem:ro
  configsvr1:
    image: ${MONGODB_IMAGE}
    command: --replSet=${TEST_MONGODB_CONFIGSVR_RS} --configsvr
    volumes:
      - ./docker/test/entrypoint-mongod.sh:/entrypoint.sh:ro
      - ./docker/test/entrypoint-mongod.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./docker/test/mongod.key:/mongod.key:ro
      - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
      - ./docker/test/ssl/mongodb.pem:/mongod.pem:ro
  #  configsvr2:
  #    image: ${MONGODB_IMAGE}
  #    command: --replSet=${TEST_MONGODB_CONFIGSVR_RS} --configsvr
  #    volumes:
  #    - ./docker/test/entrypoint-mongod.sh:/entrypoint.sh:ro
  #    - ./docker/test/mongod.key:/mongod.key:ro
  #    - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
  #    - ./docker/test/ssl/mongodb.pem:/mongod.pem:ro
  #  configsvr3:
  #    image: ${MONGODB_IMAGE}
  #    command: --replSet=${TEST_MONGODB_CONFIGSVR_RS} --configsvr
  #    volumes:
  #    - ./docker/test/entrypoint-mongod.sh:/entrypoint.sh:ro
  #    - ./docker/test/mongod.key:/mongod.key:ro
  #    - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
  #    - ./docker/test/ssl/mongodb.pem:/mongod.pem:ro
  mongos:
    image: ${MONGODB_IMAGE}
    command: --configdb=${TEST_MONGODB_CONFIGSVR_RS}/configsvr1:27019
    ports:
      - 27037:27017
    volumes:
      - ./docker/test/entrypoint-mongos.sh:/entrypoint.sh:ro
      - ./docker/test/entrypoint-mongos.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./docker/test/mongod.key:/mongos.key:ro
      - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
      - ./docker/test/ssl/mongodb.pem:/mongos.pem:ro
    depends_on:
      - configsvr1
  #   - configsvr2
  #   - configsvr3
  init:
    image: ${MONGODB_IMAGE}
    volumes:
      - ./docker/test/init-cluster.sh:/entrypoint.sh:ro
      - ./docker/test/init-cluster.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./docker/test/mongod.key:/mongod.key:ro
      - ./docker/test/ssl/rootCA.crt:/rootCA.crt:ro
      - ./docker/test/ssl/client.pem:/client.pem:ro
    env_file:
      - .env
    depends_on:
      - mongos
      - s1-mongo1
      - s1-mongo2
      - s1-mongo3
      - s2-mongo1
      - s2-mongo2
      - s2-mongo3
      - s3-mongo1
      - s3-mongo2
      - s3-mongo3
      - standalone
